{"version":3,"sources":["..\\..\\..\\..\\assets\\script/assets\\script\\Filter.js"],"names":["Filter","node","callBack","canvas","document","createElement","ctx","getContext","texture","spriteFrame","getTexture","img","Image","width","height","src","url","onload","res","drawImage","bind","_createCanvas","_grayscale","imgData","getImageData","data","i","p","putImageData","_anticolor","_blankwhite","type","colorType","arguments","_greenredblue","blur","blurs","_vague","imgData1","data1","tpoint","j","tr","tg","tb","dx","dy","x","y","size","sizes","_mosaic","rr","rg","rb"],"mappings":"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","file":"Filter.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["class Filter {\r\n    /***\r\n     * author:zlife@vip.qq.com\r\n     * parms:\r\n     *  node:对应节点的cc.Sprite\r\n     * \r\n     * desc:\r\n     *  可以继续自定义，使用说明，基于cocos\r\n     *  let f=new Filter(this.node.getComponent(cc.Sprite));\r\n        f.blankWhite(canvas=>{\r\n            var texture = new cc.Texture2D();\r\n            texture.initWithElement(canvas);\r\n            texture.handleLoadedTexture();\r\n            var newframe = new cc.SpriteFrame(texture);\r\n            this.node.getComponent(cc.Sprite).spriteFrame = newframe;\r\n        })\r\n     * **/\r\n    constructor(node) {\r\n        this.node = node;\r\n    }\r\n    _createCanvas(callBack) {\r\n        let canvas = document.createElement('canvas'),\r\n            ctx = canvas.getContext('2d'),\r\n            texture = this.node.spriteFrame.getTexture(),\r\n            img = new Image();\r\n        canvas.width = texture.width;\r\n        canvas.height = texture.height;\r\n        img.src = `${texture.url}`;\r\n        img.onload = function (res) {\r\n            ctx.drawImage(img, 0, 0);\r\n            callBack && callBack(canvas)\r\n        }.bind(this)\r\n    }\r\n    //灰度\r\n    grayScale(callBack) {\r\n        this._createCanvas(canvas => {\r\n            this._grayscale(canvas.getContext('2d'), canvas.width, canvas.height);\r\n            callBack && callBack(canvas)\r\n        });\r\n    }\r\n    _grayscale(ctx, width, height) {\r\n        let imgData = ctx.getImageData(0, 0, width, height), \r\n        data = imgData.data;\r\n        for (let i = 0; i < width * height; ++i) {\r\n            let p = (data[4 * i + 0] + data[4 * i + 1] + data[4 * i + 2]) / 3;\r\n            data[4 * i + 0] = p;\r\n            data[4 * i + 1] = p;\r\n            data[4 * i + 2] = p;\r\n        }\r\n        ctx.putImageData(imgData, 0, 0);\r\n\r\n    }\r\n    //反色\r\n    antiColor(callBack) {\r\n        this._createCanvas(canvas => {\r\n            this._anticolor(canvas.getContext('2d'), canvas.width, canvas.height);\r\n            callBack && callBack(canvas)\r\n        });\r\n    }\r\n    _anticolor(ctx, width, height) {\r\n        let imgData = ctx.getImageData(0, 0, width, height),\r\n        data = imgData.data;\r\n        for (let i = 0; i < width * height; ++i) {\r\n            data[4 * i + 0] = 255 - data[4 * i + 0];\r\n            data[4 * i + 1] = 255 - data[4 * i + 1];\r\n            data[4 * i + 2] = 255 - data[4 * i + 2];\r\n        }\r\n        ctx.putImageData(imgData, 0, 0);\r\n    }\r\n    //黑白\r\n    blankWhite(callBack) {\r\n        this._createCanvas(canvas => {\r\n            this._blankwhite(canvas.getContext('2d'), canvas.width, canvas.height);\r\n            callBack && callBack(canvas)\r\n        });\r\n    }\r\n    _blankwhite(ctx, width, height) {\r\n        let imgData = ctx.getImageData(0, 0, width, height),\r\n        data = imgData.data;\r\n        for (let i = 0; i < width * height; ++i) {\r\n            var p = (data[4 * i + 0] + data[4 * i + 1] + data[4 * i + 2]) / 3;\r\n            if (p > 128) {\r\n                data[4 * i + 0] = 255;\r\n                data[4 * i + 1] = 255;\r\n                data[4 * i + 2] = 255;\r\n            } else {\r\n                data[4 * i + 0] = 0;\r\n                data[4 * i + 1] = 0;\r\n                data[4 * i + 2] = 0;\r\n            }\r\n        }\r\n        ctx.putImageData(imgData, 0, 0);\r\n    }\r\n    //绿红蓝\r\n    //parms:type:default 1,可选 2,3分别表示绿红蓝\r\n    greenRedBlue(callBack,type) {\r\n        let colorType = arguments[1] || 1;\r\n        this._createCanvas(canvas => {\r\n            this._greenredblue(canvas.getContext('2d'), canvas.width, canvas.height,colorType);\r\n            callBack && callBack(canvas)\r\n        });\r\n    }\r\n    _greenredblue(ctx, width, height,type=1) {\r\n        let imgData = ctx.getImageData(0, 0, width, height),\r\n        data = imgData.data;\r\n        for (let i = 0; i < width * height; ++i) {\r\n            if(type === 1)data[4 * i + 0] = 0;  //绿\r\n            else if(type === 2)data[4 * i + 1] = 0;  //红\r\n            else data[4 * i + 2] = 0; //蓝\r\n        }\r\n        ctx.putImageData(imgData, 0, 0);\r\n    }\r\n    //模糊滤镜\r\n    /****\r\n     * \r\n     * blur:默认1，模糊尺度\r\n     * ***/\r\n    vague(callBack,blur){\r\n        let blurs = arguments[1] || 1;\r\n        this._createCanvas(canvas => {\r\n            this._vague(canvas.getContext('2d'), canvas.width, canvas.height,blurs);\r\n            callBack && callBack(canvas)\r\n        });\r\n    }\r\n    _vague(ctx, width, height,blurs){\r\n        let imgData = ctx.getImageData(0, 0, width, height),\r\n        data = imgData.data,\r\n        imgData1 = ctx.getImageData(0, 0, width, height),\r\n        data1 = imgData1.data,\r\n        tpoint=(2 * blurs + 1) * (2 * blurs + 1);\r\n        for(let i = blurs;i<height-blurs;++i){\r\n            for(let j = blurs;j<width-blurs;++j){\r\n                let tr=0,tg=0,tb=0;\r\n                for(let dx = -blurs;dx<=blurs;++dx){\r\n                    for(let dy = -blurs;dy<=blurs;++dy){\r\n                        let x = i + dx,\r\n                        y = j +dy,\r\n                        p = x * width + y;\r\n                        tr += data[p * 4 + 0];\r\n                        tg += data[p * 4 + 1];\r\n                        tb += data[p * 4 + 2];\r\n                    }\r\n                }\r\n                let p = i * width + j;\r\n                data1[p * 4 + 0] = tr / tpoint;\r\n                data1[p * 4 + 1] = tg / tpoint;\r\n                data1[p * 4 + 2] = tb / tpoint;\r\n            }\r\n        }\r\n        ctx.putImageData(imgData1, 0, 0);\r\n    }\r\n    //马赛克\r\n    /****\r\n     * size:默认1，马赛克大小\r\n     * ***/\r\n    mosaic(callBack,size){\r\n        let sizes = arguments[1] || 1;\r\n        this._createCanvas(canvas => {\r\n            this._mosaic(canvas.getContext('2d'), canvas.width, canvas.height,sizes);\r\n            callBack && callBack(canvas)\r\n        });\r\n    }\r\n    _mosaic(ctx, width, height,size){\r\n        let imgData = ctx.getImageData(0, 0, width, height),\r\n        data = imgData.data,\r\n        imgData1 = ctx.getImageData(0, 0, width, height),\r\n        data1 = imgData1.data,\r\n        tpoint=size*size;\r\n        for(let i = 0;i<height;i+=size){\r\n            for(let j = 0;j<width;j+=size){\r\n                let tr=0,tg=0,tb=0;\r\n                for(let dx = 0;dx < size;++dx){\r\n                    for(let dy = 0;dy < size;++dy){\r\n                        let x = i + dx,\r\n                        y = j + dy,\r\n                        p = x * width + y;\r\n                        tr += data[p * 4 + 0];\r\n                        tg += data[p * 4 + 1];\r\n                        tb += data[p * 4 + 2];\r\n                    }\r\n                }\r\n                let rr = tr / tpoint,\r\n                rg = tg / tpoint,\r\n                rb = tb / tpoint;\r\n                for(let dx = 0;dx < size;++dx){\r\n                    for(let dy = 0;dy < size;++dy){\r\n                        let x = i + dx,\r\n                        y = j + dy,\r\n                        p = x * width + y;\r\n                        data1[p * 4 + 0] = rr;\r\n                        data1[p * 4 + 1] = rg;\r\n                        data1[p * 4 + 2] = rb;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        ctx.putImageData(imgData1, 0, 0);\r\n    }\r\n}\r\n\r\nexport default Filter;"]}